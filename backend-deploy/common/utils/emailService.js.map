{"version":3,"sources":["../../../src/common/utils/emailService.ts","../../../src/common/utils/envConfig.ts"],"sourcesContent":["import { Resend } from 'resend';\nimport { env } from './envConfig';\n\n// Initialize the Resend instance\nconst resend = new Resend(env.RESEND_API_KEY);\n\ninterface SendEmailParams {\n  from: string;\n  to: string[];\n  subject: string;\n  html: string;\n}\n\ninterface SendEmailResult {\n  success: boolean;\n  error?: Error;\n}\n\nexport const sendEmail = async ({ from, to, subject, html }: SendEmailParams): Promise<SendEmailResult> => {\n  try {\n    const { data, error } = await resend.emails.send({\n      from,\n      to,\n      subject,\n      html,\n    });\n\n    if (error) {\n      console.error(\"Error from resend API:\", error);\n      return { success: false, error };\n    }\n\n    console.log('Email sent:', data);\n    return { success: true };\n  } catch (err) {\n    console.error('Unexpected error:', err);\n    return { success: false, error: err as Error };\n  }\n};\n\n","import dotenv from 'dotenv';\nimport { cleanEnv, host, num, port, str, testOnly } from 'envalid';\n\ndotenv.config();\n\nexport const env = cleanEnv(process.env, {\n  NODE_ENV: str({ devDefault: testOnly('test'), choices: ['development', 'production', 'test'] }),\n  HOST: host({ devDefault: testOnly('localhost') }),\n  PORT: port({ devDefault: testOnly(3000) }),\n  CORS_ORIGIN: str({ devDefault: testOnly('http://localhost:3000') }),\n  COMMON_RATE_LIMIT_MAX_REQUESTS: num({ devDefault: testOnly(1000) }),\n  COMMON_RATE_LIMIT_WINDOW_MS: num({ devDefault: testOnly(1000) }),\n  MONGO_DB_URL: str({ devDefault: testOnly('mongodb+srv://kapish:kapish@cluster0.ch85x.mongodb.net/advocatehunt') }),\n  JWT_SECRET: str({ devDefault: testOnly('$2a$10$rl/7yPMiN0G9vVyyqKrPDOMxXVOJXD2FVY9J4gdtn5JbcmFFK0Bvq') }),\n  JWT_TOKEN_Expiry: str({ devDefault: testOnly('1d') }),\n  JWT_REFRESH_SECRET: str({\n    devDefault: testOnly('$2a$10$a4m5BrSFBh48Uc8DzL41rOoLMtkNpH1a/kajgkzrw07XRXqaBWlse'),\n  }),\n  REFRESH_TOKEN_Expiry: str({ devDefault: testOnly('30d') }),\n  RESEND_API_KEY: str({ devDefault: testOnly('re_7RaazBDP_9iZhzCtXmhNVCQKasUN5CW1C') })\n});\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB;;;ACAvB,oBAAmB;AACnB,qBAAyD;AAEzD,cAAAA,QAAO,OAAO;AAEP,IAAM,UAAM,yBAAS,QAAQ,KAAK;AAAA,EACvC,cAAU,oBAAI,EAAE,gBAAY,yBAAS,MAAM,GAAG,SAAS,CAAC,eAAe,cAAc,MAAM,EAAE,CAAC;AAAA,EAC9F,UAAM,qBAAK,EAAE,gBAAY,yBAAS,WAAW,EAAE,CAAC;AAAA,EAChD,UAAM,qBAAK,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EACzC,iBAAa,oBAAI,EAAE,gBAAY,yBAAS,uBAAuB,EAAE,CAAC;AAAA,EAClE,oCAAgC,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EAClE,iCAA6B,oBAAI,EAAE,gBAAY,yBAAS,GAAI,EAAE,CAAC;AAAA,EAC/D,kBAAc,oBAAI,EAAE,gBAAY,yBAAS,qEAAqE,EAAE,CAAC;AAAA,EACjH,gBAAY,oBAAI,EAAE,gBAAY,yBAAS,8DAA8D,EAAE,CAAC;AAAA,EACxG,sBAAkB,oBAAI,EAAE,gBAAY,yBAAS,IAAI,EAAE,CAAC;AAAA,EACpD,wBAAoB,oBAAI;AAAA,IACtB,gBAAY,yBAAS,8DAA8D;AAAA,EACrF,CAAC;AAAA,EACD,0BAAsB,oBAAI,EAAE,gBAAY,yBAAS,KAAK,EAAE,CAAC;AAAA,EACzD,oBAAgB,oBAAI,EAAE,gBAAY,yBAAS,sCAAsC,EAAE,CAAC;AACtF,CAAC;;;ADhBD,IAAM,SAAS,IAAI,qBAAO,IAAI,cAAc;AAcrC,IAAM,YAAY,OAAO,EAAE,MAAM,IAAI,SAAS,KAAK,MAAiD;AACzG,MAAI;AACF,UAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,OAAO,KAAK;AAAA,MAC/C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAED,QAAI,OAAO;AACT,cAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAO,EAAE,SAAS,OAAO,MAAM;AAAA,IACjC;AAEA,YAAQ,IAAI,eAAe,IAAI;AAC/B,WAAO,EAAE,SAAS,KAAK;AAAA,EACzB,SAAS,KAAK;AACZ,YAAQ,MAAM,qBAAqB,GAAG;AACtC,WAAO,EAAE,SAAS,OAAO,OAAO,IAAa;AAAA,EAC/C;AACF;","names":["dotenv"]}