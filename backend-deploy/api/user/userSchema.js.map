{"version":3,"sources":["../../../src/api/user/userSchema.ts"],"sourcesContent":["import mongoose, { CallbackError, Document, Schema } from 'mongoose';\nimport { User } from './userModel';\nimport bcrypt from 'bcryptjs';\n\nconst UserSchema: Schema = new Schema(\n  {\n    firstName: { type: String, required: true },\n    lastName: { type: String, required: true },\n    email: { type: String, required: true, unique: true },\n    age: { type: Number, required: true },\n    password: { type: String, required: true },\n    resetToken: { type: String, required: false },\n    resetTokenExpiry: { type: Number, required: false }\n  },\n  {\n    versionKey: false,\n    timestamp: true,\n  }\n);\n\n// Hash password before saving\nUserSchema.pre<User>('save', async function (next) {\n  if (!this.isModified('password')) {\n    return next();\n  }\n  try {\n    const salt = await bcrypt.genSalt(10);\n    this.password = await bcrypt.hash(this.password, salt);\n    return next();\n  } catch (err) {\n    return next(err as CallbackError);\n  }\n});\n\n// Method to compare passwords\nUserSchema.methods.comparePassword = async function (candidatePassword: string) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\nexport const UserModel = mongoose.model<User>('User', UserSchema);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0D;AAE1D,sBAAmB;AAEnB,IAAM,aAAqB,IAAI;AAAA,EAC7B;AAAA,IACE,WAAW,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACzC,OAAO,EAAE,MAAM,QAAQ,UAAU,MAAM,QAAQ,KAAK;AAAA,IACpD,KAAK,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACpC,UAAU,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACzC,YAAY,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,IAC5C,kBAAkB,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACpD;AAAA,EACA;AAAA,IACE,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AACF;AAGA,WAAW,IAAU,QAAQ,eAAgB,MAAM;AACjD,MAAI,CAAC,KAAK,WAAW,UAAU,GAAG;AAChC,WAAO,KAAK;AAAA,EACd;AACA,MAAI;AACF,UAAM,OAAO,MAAM,gBAAAA,QAAO,QAAQ,EAAE;AACpC,SAAK,WAAW,MAAM,gBAAAA,QAAO,KAAK,KAAK,UAAU,IAAI;AACrD,WAAO,KAAK;AAAA,EACd,SAAS,KAAK;AACZ,WAAO,KAAK,GAAoB;AAAA,EAClC;AACF,CAAC;AAGD,WAAW,QAAQ,kBAAkB,eAAgB,mBAA2B;AAC9E,SAAO,gBAAAA,QAAO,QAAQ,mBAAmB,KAAK,QAAQ;AACxD;AAEO,IAAM,YAAY,gBAAAC,QAAS,MAAY,QAAQ,UAAU;","names":["bcrypt","mongoose"]}